Cервис для взаимодействия со страховыми компаниями osago-aggregator

Стек: Python/FastAPI/Celery/MongoDB

Osago-aggregator реализуют следующий REST API:
- SendRequestOSAGO(данные_для_запроса) отправляет запрос о страховании в различные кампании. 
  Тут запускается celery task в которой будет проводится отправка запросов в API страховых кампаний. 
  Брокер задач для celery релизован на Redis. Запросы отправляются в сторонее API страховых через паттерн Circuit Breaker + TimeOut.
  Если API конкретной страховой не отвечает что Circuit Breaker закрывает доступ к ней и мы отправляем запрос (экономия ресурсов),
  если API работает отправляем запрос, но если превышен TimeOut (60 сек), прерываем запрос и не ждем.
  Агрегированные данные записываются в БД (MongoDB).
  Данный метод возвращает UID_запроса.
- GetResult(UID_запроса) возвращает агрегированный результат решений о страховании от всех страховых кампаний 
  (точнее от тех кто ответил за 60 секунд). Смотрим в БД по ключу UID_запроса. Если данные еще не готовы возвращаем 
  статус NotReady, если данные есть возвращаем статус Ready и в теле запроса сами данные.

Сервисы core-app и osago-aggregator могут быть запущены в нескольких экземплярах, при этом все будет работать так как запросы
к страховым кампаниям завязаны на UID_запроса.

Вкладка OSAGO в документе: https://app.diagrams.net/?splash=0#G1qMAK24JN_qMEUghoh77w31NkRFJZE0VK#%7B%22pageId%22%3A%22-FQbQIRzEgXYEJ3rUFKh%22%7D

Также доступен файл диаграммы: InureTech_технологическая архитектура_OSAGO.drawio.pdf
